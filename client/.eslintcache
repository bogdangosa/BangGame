[{"C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\index.js":"1","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\App\\App.js":"2","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Login\\Login.js":"3","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Lobby\\Lobby.js":"4","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Game\\Game.js":"5","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Button\\Button.js":"6","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Dice\\Dice.js":"7"},{"size":234,"mtime":1609705082937,"results":"8","hashOfConfig":"9"},{"size":972,"mtime":1609875358920,"results":"10","hashOfConfig":"9"},{"size":1760,"mtime":1610280964069,"results":"11","hashOfConfig":"9"},{"size":2579,"mtime":1610280964068,"results":"12","hashOfConfig":"9"},{"size":8319,"mtime":1612297592565,"results":"13","hashOfConfig":"9"},{"size":293,"mtime":1610280964064,"results":"14","hashOfConfig":"9"},{"size":285,"mtime":1612297592562,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"zwbf03",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\index.js",[],["36","37"],"C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\App\\App.js",["38"],"import React,{ useEffect } from 'react'\r\nimport './App.css';\r\nimport Login from '../Components/Login/Login'\r\nimport Lobby from '../Components/Lobby/Lobby'\r\nimport Game from '../Components/Game/Game'\r\nimport {BrowserRouter as Router , Switch , Route} from 'react-router-dom'\r\nimport io from 'socket.io-client'\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n  //declar variabila socket si o conectez la server\r\n  let socket = io(\"http://localhost:5000/\");\r\n\r\n  useEffect(()=>{\r\n    //Trimit Mesaj la server ca m-am conectat\r\n    socket.emit('message','New User Connected');\r\n\r\n  },[]);\r\n\r\n\r\n  //Creez Rutele Siteului\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact render={()=>(<Login socket={socket}/>)}/>\r\n          <Route path=\"/Lobby\" render={()=>(<Lobby socket={socket}/>)}/>\r\n          <Route path=\"/Game\" render={()=>(<Game socket={socket}/>)}/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Login\\Login.js",["39","40","41","42"],"import React,{ useState , useEffect }from 'react'\r\nimport './Login.css'\r\nimport Button from '../Button/Button'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = (props)=>{\r\n    //Declar variabila nume care va tine valoarea inputului nume\r\n    const [Name,setName] = useState('');\r\n    const [Room,setRoom] = useState('');\r\n    \r\n    let socket = props.socket;\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    //Functie care Transmite la server ca user-ul a intat intr-un meci\r\n    const JoinGame = () =>{\r\n        if(Name== '' || Room == '')return;\r\n        socket.emit('NewUser',{name:Name,room:Room});\r\n        history.push(\"/Lobby\");\r\n    }\r\n    const CreateGame = () =>{\r\n        if(Name=='')return;\r\n        socket.emit('CreateGame',Name);\r\n        history.push(\"/Lobby\");\r\n    }\r\n\r\n    //Functie care updateaza valoarea variabiei name\r\n    const ChangeName = e =>{\r\n        setName(e.target.value);\r\n        //console.log(Name);\r\n    }\r\n    const ChangeRoom = e =>{\r\n        setRoom(e.target.value);\r\n        //console.log(Room);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <h1 className=\"LoginTitle\">Bang Game</h1>\r\n            <form className=\"LoginForm\">\r\n                <input className=\"LoginInput\" placeholder=\"Enter your name\" value={Name} onChange={ChangeName}/>\r\n                <input className=\"LoginInput\" placeholder=\"Enter room code\" value={Room} onChange={ChangeRoom}/>\r\n                <div className=\"LoginButtons\">\r\n                    <Button Text=\"Join Game\" onClick={()=>JoinGame()} Selected={false}/>\r\n                    <Button Text=\"Create Game\" onClick={()=>CreateGame()} Selected={false}/>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Lobby\\Lobby.js",["43","44"],"import React,{ useState , useEffect } from 'react'\r\nimport Button from '../Button/Button';\r\nimport './Lobby.css'\r\nimport CharacterPhoto from '../CharacterImages/BlackJack.jpg'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Lobby = (props)=> {\r\n    const [playersArray,SetPlayersArray] = useState([]);\r\n    const [ReadyState,SetReadyState] = useState(false);\r\n    const [CurentPlayersName,setCurentPlayersName]= useState('');\r\n    const [RoomId,SetRoomId]= useState('error');\r\n\r\n    let socket = props.socket;\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    socket.on('NewPlayer',NewPlayer=>{\r\n        //console.log(playersArray);\r\n        SetPlayersArray([...playersArray,NewPlayer]);    \r\n        //console.log(NewPlayer);\r\n    })\r\n\r\n    socket.on('StartingLobbyData',StartingLobbyData=>{\r\n       SetRoomId(StartingLobbyData.room);\r\n       let CurentPlayersArray = StartingLobbyData.curentPlayersArray;\r\n\r\n        setCurentPlayersName(CurentPlayersArray[CurentPlayersArray.length-1]);\r\n        \r\n        SetPlayersArray(CurentPlayersArray);\r\n        //console.log(CurentPlayersArray);\r\n        //console.log(CurentPlayersName);\r\n        \r\n    })\r\n    \r\n\r\n    socket.on('GameStarted',()=>{\r\n        console.log(\"Game Started\");\r\n        //socket.emit('GetRole',CurentPlayersName);\r\n        socket.removeAllListeners(\"GameStarted\");\r\n        history.push(\"/Game\");\r\n    })\r\n\r\n    socket.on('UserLeft', rPlayersArray=>{\r\n        SetPlayersArray(rPlayersArray);\r\n    })\r\n\r\n        \r\n    const PlayerReady = ()=> {\r\n        if(!ReadyState){\r\n            console.log(CurentPlayersName);\r\n            socket.emit('PlayerReady',RoomId);\r\n            SetReadyState(true);\r\n        }\r\n        else {\r\n            socket.emit('PlayerNotReady',RoomId);\r\n            SetReadyState(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"Lobby\">\r\n            <p className=\"LobbyCode\">room code:{RoomId}</p>\r\n            <div className=\"PlayersContainer\">\r\n                {\r\n                    playersArray.map((player,index)=>{\r\n                        return (\r\n                            <div className=\"PlayerContainer\" key={index}>\r\n                                <img src={CharacterPhoto}></img>\r\n                                <p className=\"PlayerName\">{player}</p>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n            <Button Text=\"Ready\" className={\"ReadyButton\"} onClick={()=>PlayerReady()} Selected={ReadyState} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lobby;\r\n","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Game\\Game.js",["45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import React,{useState} from 'react'\r\nimport './Game.css'\r\nimport Button from '../Button/Button'\r\nimport Dice from '../Dice/Dice'\r\n\r\nconst Game = (props)=>{\r\n    const [CurentPlayerRole,SetCurentPlayerRole] = useState('');\r\n    const [CurentPlayerName,SetCurentPlayerName] = useState('');\r\n    const [CurentPlayerCharacter,SetCurentPlayerCharacter] = useState('');\r\n    const [PlayersTurn,setPlayersTurn] = useState('');\r\n    const [PlayersArray,setPlayersArray] = useState([]);\r\n    const [CharactersArray,setCharactersArray] = useState([]);\r\n    const [DiceValues,SetDiceValues] = useState([{value:0,selected:false},{value:0,selected:false},{value:0,selected:false},{value:0,selected:false},{value:0,selected:false}]);\r\n    //const [SelectedDices,SetSelectedDices] = useState([false,false,false,false,false]);\r\n    const [RoomId,SetRoomId]= useState('error');\r\n    const [PositionsIndexArray,SetPositionsIndexArray] = useState([]);\r\n    let socket = props.socket;\r\n\r\n    socket.on('sendStartingData',data=>{\r\n        SetRoomId(data.room);\r\n        SetCurentPlayerRole(data.role);\r\n        SetCurentPlayerName(data.name);\r\n\r\n        let AuxPlayerArray = [];\r\n        let AuxCharactersArray = [];\r\n\r\n        let cIndex = data.playersnamearray.findIndex(PlayerName => PlayerName == data.name);\r\n       // console.log(cIndex);\r\n        SetCurentPlayerCharacter(data.playerscharacterarray[cIndex]);\r\n        \r\n\r\n        let NextName = data.playersnextarray[cIndex];\r\n        cIndex = data.playersnamearray.findIndex(NextPlayerName=> NextPlayerName == NextName);\r\n        //console.log(cIndex);\r\n        AuxPlayerArray.push(NextName);\r\n        AuxCharactersArray.push(data.playerscharacterarray[cIndex]);\r\n\r\n        while(data.playersnextarray[cIndex] != data.name){\r\n            NextName = data.playersnextarray[cIndex];\r\n            cIndex = data.playersnamearray.findIndex(NextPlayerName=> NextPlayerName == NextName);\r\n            console.log(cIndex);\r\n            AuxPlayerArray.push(NextName);\r\n            AuxCharactersArray.push(data.playerscharacterarray[cIndex]);\r\n        }\r\n\r\n        /*console.log(\"----\");\r\n        console.log(data.playersnamearray);\r\n        console.log(data.playersnextarray);\r\n        console.log(AuxPlayerArray);*/\r\n\r\n\r\n        switch(data.playersnamearray.length){\r\n            case 3:\r\n                SetPositionsIndexArray([1,2]);\r\n                break;\r\n            case 4:\r\n                SetPositionsIndexArray([1,3,2]);\r\n                break;\r\n            case 5: \r\n                SetPositionsIndexArray([4,1,3,2]);\r\n                break;\r\n            case 6:\r\n                SetPositionsIndexArray([4,1,3,2,5]);\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        setPlayersArray(AuxPlayerArray);\r\n        setCharactersArray(AuxCharactersArray);\r\n        setPlayersTurn(data.playersturn);\r\n\r\n        socket.removeAllListeners(\"sendStartingData\");\r\n    })\r\n\r\n    socket.on('PlayersTurn',PlayersTurnName=>{\r\n        console.log(PlayersTurnName);\r\n        setPlayersTurn(PlayersTurnName);\r\n        SetDiceValues([{value:0,selected:false},{value:0,selected:false},{value:0,selected:false},{value:0,selected:false},{value:0,selected:false}]);\r\n    });\r\n    socket.on('DiceResult',DiceRoll=>{\r\n        console.log(DiceRoll);\r\n        let AuxDiceArray = [];\r\n        DiceRoll.forEach(DiceValue => {\r\n            AuxDiceArray.push({value:DiceValue,selected:false});\r\n        });\r\n        SetDiceValues(AuxDiceArray);\r\n    });\r\n\r\n    const RollDice = () =>{\r\n\r\n        if(CurentPlayerName != PlayersTurn) return;\r\n        \r\n        let AuxDiceValues = [];\r\n        DiceValues.forEach(DiceValue => {\r\n            AuxDiceValues.push(DiceValue.value);\r\n        });\r\n\r\n        socket.emit('RollDice',{room:RoomId,diceArray:AuxDiceValues});\r\n\r\n    }\r\n\r\n    const NextPlayer = () =>{\r\n        if(CurentPlayerName != PlayersTurn) return;\r\n        socket.emit('NextPlayer',RoomId);\r\n        SetDiceValues([{value:0,selected:false},{value:0,selected:false},{value:0,selected:false},{value:0,selected:false},{value:0,selected:false}]);\r\n        setPlayersTurn(PlayersArray[0]); //To be fixed\r\n        \r\n    }\r\n\r\n\r\n    const CharacterPhoto =(characterName) =>{\r\n        \r\n        switch (characterName) {\r\n            case 'Lucky Duke':\r\n                return require('../CharacterImages/LuckyDuke.jpg').default\r\n                break;\r\n\r\n            case 'Willy The Kid':\r\n                return require('../CharacterImages/WillyTheKid.jpg').default\r\n                break;\r\n\r\n            case 'Slab The Killer':\r\n                return require('../CharacterImages/SlabTheKiller.jpg').default\r\n                break;\r\n\r\n            case 'Sid Ketchum':\r\n                return require('../CharacterImages/SidKetchum.jpg').default\r\n                break;\r\n\r\n            case 'Vulture Sam':\r\n                return require('../CharacterImages/VultureSam.jpg').default\r\n                break;\r\n\r\n            case 'Jourdonnais':\r\n                return require('../CharacterImages/Jourdonnais.jpg').default\r\n                break; \r\n\r\n            case 'Paul Regret':\r\n                return require('../CharacterImages/PaulRegret.jpg').default\r\n                break;\r\n        \r\n            case 'Kit Carlson':\r\n                return require('../CharacterImages/KitCarlson.jpg').default\r\n                break;\r\n        \r\n            case 'Bart Cassidy':\r\n                return require('../CharacterImages/BartCassidy.jpg').default\r\n                break;\r\n\r\n            case 'Suzy Lafayette':\r\n                return require('../CharacterImages/SuzyLafayette.jpg').default\r\n                break;\r\n\r\n            case 'Rose Doolan':\r\n                return require('../CharacterImages/RoseDoolan.jpg').default\r\n                break;\r\n\r\n            default:\r\n                return require('../CharacterImages/LuckyDuke.jpg').default\r\n                break;\r\n        }\r\n    }\r\n\r\n    const LockDice = (DiceIndex) =>{\r\n        //console.log(DiceIndex);\r\n        let AuxSelectedDices = DiceValues;\r\n        AuxSelectedDices[DiceIndex].selected = !AuxSelectedDices[DiceIndex].selected;\r\n        console.log(AuxSelectedDices);\r\n        SetDiceValues(AuxSelectedDices);\r\n    }\r\n\r\n    /*()=>CharacterPhoto(CurentPlayerCharacter)*/ \r\n\r\n    return(\r\n        <div className=\"Game\">\r\n            <div className=\"CurentPlayerInfo\">\r\n                <img src={CharacterPhoto(CurentPlayerCharacter)} className=\"CurentPlayerImage\"></img>\r\n                <div className=\"CurentPlayerNameRoleContainer\">\r\n                    <p className=\"CurentPlayerName\">{CurentPlayerName}</p>\r\n                    <p className=\"CurentPlayerRole\">{CurentPlayerRole}</p>\r\n                </div>\r\n                {CurentPlayerName == PlayersTurn ? <p className=\"CurentPlayersTurn\">*</p>: <p></p>}  \r\n                \r\n            </div>\r\n\r\n            <Button Text=\"Roll Dice\" className=\"RollDiceButton\" onClick={ ()=>RollDice() } Selected={CurentPlayerName != PlayersTurn}/>\r\n            <Button Text=\"Next Player\" className=\"NextPlayerButton\" onClick={ ()=>NextPlayer() } Selected={ CurentPlayerName != PlayersTurn}/>\r\n            \r\n\r\n            <div className=\"DicesContainer\">\r\n                {\r\n                    DiceValues.map((DiceValue,DiceIndex)=>{\r\n                        return(\r\n                            <Dice value={DiceValue.value} onClick={()=>LockDice(DiceIndex)} Selected={DiceValue.selected} Index={DiceIndex}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n\r\n            <div className=\"GamePlayersContainer\">\r\n               \r\n                {\r\n                    PlayersArray.map((playerName,index)=>{\r\n                        //console.log(CharactersArray[index]);\r\n                        return(\r\n                        <div className={`Player PlayerPosition${PositionsIndexArray[index]}`} key={index}>\r\n                            <img src={CharacterPhoto(CharactersArray[index])}></img>\r\n                            <p>{playerName}</p>    \r\n                            {playerName == PlayersTurn ? <p className=\"PlayersTurn\">*</p>: <p></p>}              \r\n                        </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;\r\n","C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Button\\Button.js",[],"C:\\Users\\dcerc\\OneDrive\\Documents\\GitHub\\BangGame\\client\\src\\Components\\Dice\\Dice.js",[],["71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":20,"column":5,"nodeType":"79","endLine":20,"endColumn":7,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"86","line":18,"column":16,"nodeType":"87","messageId":"88","endLine":18,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":18,"column":30,"nodeType":"87","messageId":"88","endLine":18,"endColumn":32},{"ruleId":"85","severity":1,"message":"86","line":23,"column":16,"nodeType":"87","messageId":"88","endLine":23,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"90","line":70,"column":33,"nodeType":"91","endLine":70,"endColumn":59},{"ruleId":"85","severity":1,"message":"86","line":27,"column":79,"nodeType":"87","messageId":"88","endLine":27,"endColumn":81},{"ruleId":"85","severity":1,"message":"86","line":33,"column":82,"nodeType":"87","messageId":"88","endLine":33,"endColumn":84},{"ruleId":"85","severity":1,"message":"92","line":38,"column":45,"nodeType":"87","messageId":"88","endLine":38,"endColumn":47},{"ruleId":"93","severity":1,"message":"94","line":40,"column":54,"nodeType":"95","messageId":"96","endLine":40,"endColumn":97},{"ruleId":"85","severity":1,"message":"86","line":40,"column":86,"nodeType":"87","messageId":"88","endLine":40,"endColumn":88},{"ruleId":"97","severity":1,"message":"98","line":52,"column":9,"nodeType":"99","messageId":"100","endLine":66,"endColumn":10},{"ruleId":"85","severity":1,"message":"92","line":92,"column":29,"nodeType":"87","messageId":"88","endLine":92,"endColumn":31},{"ruleId":"85","severity":1,"message":"92","line":104,"column":29,"nodeType":"87","messageId":"88","endLine":104,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":117,"column":17,"nodeType":"103","messageId":"104","endLine":117,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":121,"column":17,"nodeType":"103","messageId":"104","endLine":121,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":125,"column":17,"nodeType":"103","messageId":"104","endLine":125,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":129,"column":17,"nodeType":"103","messageId":"104","endLine":129,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":133,"column":17,"nodeType":"103","messageId":"104","endLine":133,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":137,"column":17,"nodeType":"103","messageId":"104","endLine":137,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":141,"column":17,"nodeType":"103","messageId":"104","endLine":141,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":145,"column":17,"nodeType":"103","messageId":"104","endLine":145,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":149,"column":17,"nodeType":"103","messageId":"104","endLine":149,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":153,"column":17,"nodeType":"103","messageId":"104","endLine":153,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":157,"column":17,"nodeType":"103","messageId":"104","endLine":157,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":161,"column":17,"nodeType":"103","messageId":"104","endLine":161,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":178,"column":17,"nodeType":"91","endLine":178,"endColumn":96},{"ruleId":"85","severity":1,"message":"86","line":183,"column":35,"nodeType":"87","messageId":"88","endLine":183,"endColumn":37},{"ruleId":"85","severity":1,"message":"92","line":187,"column":119,"nodeType":"87","messageId":"88","endLine":187,"endColumn":121},{"ruleId":"85","severity":1,"message":"92","line":188,"column":126,"nodeType":"87","messageId":"88","endLine":188,"endColumn":128},{"ruleId":"89","severity":1,"message":"90","line":209,"column":29,"nodeType":"91","endLine":209,"endColumn":79},{"ruleId":"85","severity":1,"message":"86","line":211,"column":41,"nodeType":"87","messageId":"88","endLine":211,"endColumn":43},{"ruleId":"73","replacedBy":"105"},{"ruleId":"75","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'NextName'.","ArrowFunctionExpression","unsafeRefs","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [socket]",{"range":"112","text":"113"},[561,563],"[socket]"]